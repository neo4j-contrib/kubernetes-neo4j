apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: "neo4j-replica"
  labels:
    app: neo4j
    component: replica
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: neo4j
        component: replica
    spec:
      containers:
      - name: neo4j
        image: "neo4j:3.3.2-enterprise"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: NEO4J_dbms_mode
            value: READ_REPLICA
          - name: NEO4J_dbms_security_auth__enabled
            value: "false"
          - name: NEO4J_causal__clustering_discovery__type
            value: DNS
          - name: NEO4J_causal__clustering_initial__discovery__members
            value: "neo4j:5000"
          - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
            value: "yes"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            export NEO4J_dbms_connectors_default__advertised__address=$(hostname -f)
            export NEO4J_causal__clustering_transaction__advertised__address=$(hostname -f):6000
            exec /docker-entrypoint.sh "neo4j"
        readinessProbe:
          initialDelaySeconds: 60
          httpGet:
            path: /db/manage/server/read-replica/available
            port: 7474
        livenessProbe:
          initialDelaySeconds: 60
          httpGet:
            path: /db/manage/server/read-replica/available
            port: 7474
        ports:
        - containerPort: 7474
          name: browser
        - containerPort: 7687
          name: bolt
        - containerPort: 6000
          name: tx
        securityContext:
          privileged: true
